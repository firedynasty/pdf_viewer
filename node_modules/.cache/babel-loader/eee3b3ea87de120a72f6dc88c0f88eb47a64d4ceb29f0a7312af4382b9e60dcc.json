{"ast":null,"code":"var _jsxFileName = \"/Users/stanleytan/Documents/25-technical/02-react/05-pdf_auto_scroll/src/components/PDFViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport PDFAutoScroll from './PDFAutoScroll';\nimport './PDFViewer.css';\n\n// Import pdfjs library directly - explicitly set version for stability\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\n\n// Set the worker source explicitly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js\";\nconst PDFViewer = ({\n  pdfUrl\n}) => {\n  _s();\n  const [numPages, setNumPages] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [scale, setScale] = useState(1.0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pdfLoaded, setPdfLoaded] = useState(false);\n  const containerRef = useRef(null);\n  const pdfDocRef = useRef(null);\n  const canvasRef = useRef(null);\n  const pdfViewerRef = useRef({\n    currentPageNumber: 1,\n    pagesCount: 0,\n    container: null\n  });\n\n  // Load the PDF document\n  useEffect(() => {\n    if (!pdfUrl) return;\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setPdfLoaded(false);\n\n    // Function to handle PDF loading\n    const loadPdf = async () => {\n      try {\n        let pdfData;\n\n        // Handle different types of PDF sources\n        if (pdfUrl.startsWith('blob:') || pdfUrl.startsWith('data:')) {\n          // It's a blob URL or data URL, fetch it\n          const response = await fetch(pdfUrl);\n          const arrayBuffer = await response.arrayBuffer();\n          pdfData = new Uint8Array(arrayBuffer);\n        } else {\n          // It's a regular URL\n          pdfData = {\n            url: pdfUrl,\n            withCredentials: false\n          };\n        }\n\n        // Load the PDF\n        const pdf = await pdfjsLib.getDocument(pdfData).promise;\n        if (!isMounted) return;\n\n        // Store the pdf document\n        pdfDocRef.current = pdf;\n\n        // Set the total page count\n        setNumPages(pdf.numPages);\n        pdfViewerRef.current.pagesCount = pdf.numPages;\n        setPageNumber(1);\n        setPdfLoaded(true);\n        setIsLoading(false);\n      } catch (error) {\n        if (!isMounted) return;\n        console.error('Error loading PDF:', error);\n        setError(`Failed to load PDF: ${error.message}`);\n        setIsLoading(false);\n      }\n    };\n    loadPdf();\n\n    // Cleanup\n    return () => {\n      isMounted = false;\n      if (pdfDocRef.current) {\n        try {\n          pdfDocRef.current.destroy();\n          pdfDocRef.current = null;\n        } catch (e) {\n          console.error('Error destroying PDF document:', e);\n        }\n      }\n    };\n  }, [pdfUrl]);\n\n  // Render the current page when page number changes\n  useEffect(() => {\n    if (!pdfLoaded || !pdfDocRef.current || !canvasRef.current || !pageNumber) {\n      return;\n    }\n    let isMounted = true;\n    const renderPage = async () => {\n      try {\n        // Get the page\n        const page = await pdfDocRef.current.getPage(pageNumber);\n        if (!isMounted || !canvasRef.current) {\n          page.cleanup && page.cleanup();\n          return;\n        }\n\n        // Get the viewport at scale 1.0\n        const viewport = page.getViewport({\n          scale: 1.0\n        });\n\n        // Get the canvas and context\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d', {\n          alpha: false\n        });\n\n        // Clear the canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Set canvas dimensions for high quality\n        const adjustedScale = 2.0;\n        canvas.width = viewport.width * adjustedScale;\n        canvas.height = viewport.height * adjustedScale;\n\n        // Store original dimensions for zoom calculations\n        canvas.setAttribute('data-original-width', viewport.width);\n        canvas.setAttribute('data-original-height', viewport.height);\n\n        // Scale down the canvas for display (apply current zoom)\n        canvas.style.width = viewport.width * scale + 'px';\n        canvas.style.height = viewport.height * scale + 'px';\n\n        // Set scale for context\n        context.scale(adjustedScale, adjustedScale);\n\n        // Render the page\n        await page.render({\n          canvasContext: context,\n          viewport: viewport\n        }).promise;\n\n        // Clean up page resources\n        page.cleanup && page.cleanup();\n\n        // Update auto-scroll refs\n        pdfViewerRef.current.currentPageNumber = pageNumber;\n        if (containerRef.current) {\n          pdfViewerRef.current.container = containerRef.current;\n        }\n      } catch (error) {\n        if (!isMounted) return;\n        console.error('Error rendering page:', error);\n        setError(`Error rendering page ${pageNumber}: ${error.message}`);\n      }\n    };\n    renderPage();\n    return () => {\n      isMounted = false;\n    };\n  }, [pageNumber, pdfLoaded, scale]);\n\n  // Update zoom when scale changes\n  useEffect(() => {\n    if (!canvasRef.current || !pdfLoaded || !pdfDocRef.current) return;\n    const canvas = canvasRef.current;\n\n    // Get original dimensions (stored in data attributes or from style)\n    const originalWidth = parseFloat(canvas.getAttribute('data-original-width') || canvas.style.width || canvas.width);\n    const originalHeight = parseFloat(canvas.getAttribute('data-original-height') || canvas.style.height || canvas.height);\n\n    // If we don't have original dimensions stored, save them\n    if (!canvas.getAttribute('data-original-width')) {\n      canvas.setAttribute('data-original-width', originalWidth);\n      canvas.setAttribute('data-original-height', originalHeight);\n    }\n\n    // Apply zoom to canvas display size\n    canvas.style.width = originalWidth * scale + 'px';\n    canvas.style.height = originalHeight * scale + 'px';\n\n    // Re-render the current page with updated scale to maintain quality\n    const renderCurrentPage = async () => {\n      try {\n        // Get the page\n        const page = await pdfDocRef.current.getPage(pageNumber);\n\n        // Get the viewport with current scale\n        const viewport = page.getViewport({\n          scale: 1.0\n        });\n\n        // Get the canvas and context\n        const context = canvas.getContext('2d', {\n          alpha: false\n        });\n\n        // Clear the canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Set canvas dimensions for high quality with current scale\n        const adjustedScale = 2.0;\n        canvas.width = viewport.width * adjustedScale;\n        canvas.height = viewport.height * adjustedScale;\n\n        // Apply zoom to display size\n        canvas.style.width = viewport.width * scale + 'px';\n        canvas.style.height = viewport.height * scale + 'px';\n\n        // Set scale for context\n        context.scale(adjustedScale, adjustedScale);\n\n        // Render the page\n        await page.render({\n          canvasContext: context,\n          viewport: viewport\n        }).promise;\n\n        // Clean up page resources\n        page.cleanup && page.cleanup();\n      } catch (error) {\n        console.error('Error re-rendering page for zoom:', error);\n      }\n    };\n    renderCurrentPage();\n  }, [scale, pdfLoaded, pageNumber]);\n\n  // Handle page navigation\n  const changePage = (offset, resetScroll = true) => {\n    if (!numPages) return;\n\n    // Create and dispatch an event to notify auto-scroll component to reset timer\n    const resetTimerEvent = new CustomEvent('resetAutoScrollTimer');\n    document.dispatchEvent(resetTimerEvent);\n\n    // Reset scroll position when changing pages (if resetScroll is true)\n    if (resetScroll && containerRef.current) {\n      containerRef.current.scrollTop = 0;\n    }\n    setPageNumber(prevPageNumber => {\n      const newPageNumber = prevPageNumber + offset;\n      return Math.min(Math.max(1, newPageNumber), numPages);\n    });\n  };\n\n  // Handle zoom controls\n  const zoomIn = () => setScale(prevScale => Math.min(prevScale + 0.25, 4.0));\n  const zoomOut = () => setScale(prevScale => Math.max(prevScale - 0.25, 0.5));\n  const resetZoom = () => setScale(1.0);\n\n  // Listen for page change events from auto-scroll and handle key navigation\n  useEffect(() => {\n    const handlePageChange = event => {\n      const {\n        newPage\n      } = event.detail;\n      if (newPage && newPage <= numPages) {\n        setPageNumber(newPage);\n      }\n    };\n\n    // Handle page change without scroll reset\n    const handlePageChangeNoScroll = event => {\n      const {\n        newPage\n      } = event.detail;\n      if (newPage && newPage <= numPages) {\n        changePage(newPage - pageNumber, false);\n      }\n    };\n\n    // Handle keyboard navigation for scrolling within PDF container\n    const handleKeyDown = e => {\n      // Find the PDF container element which has the scrollbar\n      const pdfContainer = document.querySelector('.pdf-container');\n      if (!pdfContainer) return;\n      if (e.key === 'x' || e.key === 'X') {\n        // Scroll up within the PDF container\n        pdfContainer.scrollBy({\n          top: -150,\n          behavior: 'smooth'\n        });\n        e.preventDefault(); // Prevent default browser behavior\n      } else if (e.key === 'c' || e.key === 'C') {\n        // Scroll down within the PDF container\n        pdfContainer.scrollBy({\n          top: 150,\n          behavior: 'smooth'\n        });\n        e.preventDefault(); // Prevent default browser behavior\n      } else if (e.key === 'o' || e.key === 'O') {\n        // Scroll to top of the page (like Home key)\n        pdfContainer.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n        e.preventDefault(); // Prevent default browser behavior\n      } else if (e.key === 'p' || e.key === 'P') {\n        // Scroll to bottom of the page (like End key)\n        pdfContainer.scrollTo({\n          top: pdfContainer.scrollHeight,\n          behavior: 'smooth'\n        });\n\n        // Reset auto-scroll timer\n        const resetTimerEvent = new CustomEvent('resetAutoScrollTimer');\n        document.dispatchEvent(resetTimerEvent);\n        e.preventDefault(); // Prevent default browser behavior\n      }\n    };\n    document.addEventListener('pageChange', handlePageChange);\n    document.addEventListener('pageChangeNoScroll', handlePageChangeNoScroll);\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('pageChange', handlePageChange);\n      document.removeEventListener('pageChangeNoScroll', handlePageChangeNoScroll);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [numPages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changePage(-1),\n          disabled: pageNumber <= 1 || isLoading,\n          children: \"Previous (z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", pageNumber, \" of \", numPages || '--']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changePage(1),\n          disabled: pageNumber >= numPages || isLoading,\n          id: \"next-page-button\",\n          children: \"Next (m/,)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoom-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: zoomOut,\n          disabled: isLoading,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Math.round(scale * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: zoomIn,\n          disabled: isLoading,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetZoom,\n          disabled: isLoading,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PDFAutoScroll, {\n        pdfViewerRef: pdfViewerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-container\",\n      ref: containerRef,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-loading\",\n        children: \"Loading PDF document...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }, this), pdfLoaded && !isLoading && !error && /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"pdf-page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFViewer, \"Y2IG25m16MkIsTYGPq/zDI+ySk4=\");\n_c = PDFViewer;\nexport default PDFViewer;\nvar _c;\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","PDFAutoScroll","pdfjsLib","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","PDFViewer","pdfUrl","_s","numPages","setNumPages","pageNumber","setPageNumber","scale","setScale","isLoading","setIsLoading","error","setError","pdfLoaded","setPdfLoaded","containerRef","pdfDocRef","canvasRef","pdfViewerRef","currentPageNumber","pagesCount","container","isMounted","loadPdf","pdfData","startsWith","response","fetch","arrayBuffer","Uint8Array","url","withCredentials","pdf","getDocument","promise","current","console","message","destroy","e","renderPage","page","getPage","cleanup","viewport","getViewport","canvas","context","getContext","alpha","clearRect","width","height","adjustedScale","setAttribute","style","render","canvasContext","originalWidth","parseFloat","getAttribute","originalHeight","renderCurrentPage","changePage","offset","resetScroll","resetTimerEvent","CustomEvent","document","dispatchEvent","scrollTop","prevPageNumber","newPageNumber","Math","min","max","zoomIn","prevScale","zoomOut","resetZoom","handlePageChange","event","newPage","detail","handlePageChangeNoScroll","handleKeyDown","pdfContainer","querySelector","key","scrollBy","top","behavior","preventDefault","scrollTo","scrollHeight","addEventListener","removeEventListener","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","id","round","ref","_c","$RefreshReg$"],"sources":["/Users/stanleytan/Documents/25-technical/02-react/05-pdf_auto_scroll/src/components/PDFViewer.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport PDFAutoScroll from './PDFAutoScroll';\nimport './PDFViewer.css';\n\n// Import pdfjs library directly - explicitly set version for stability\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\n\n// Set the worker source explicitly\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js\";\n\nconst PDFViewer = ({ pdfUrl }) => {\n  const [numPages, setNumPages] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [scale, setScale] = useState(1.0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pdfLoaded, setPdfLoaded] = useState(false);\n  \n  const containerRef = useRef(null);\n  const pdfDocRef = useRef(null);\n  const canvasRef = useRef(null);\n  \n  const pdfViewerRef = useRef({\n    currentPageNumber: 1,\n    pagesCount: 0,\n    container: null\n  });\n  \n  // Load the PDF document\n  useEffect(() => {\n    if (!pdfUrl) return;\n    \n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setPdfLoaded(false);\n    \n    // Function to handle PDF loading\n    const loadPdf = async () => {\n      try {\n        let pdfData;\n        \n        // Handle different types of PDF sources\n        if (pdfUrl.startsWith('blob:') || pdfUrl.startsWith('data:')) {\n          // It's a blob URL or data URL, fetch it\n          const response = await fetch(pdfUrl);\n          const arrayBuffer = await response.arrayBuffer();\n          pdfData = new Uint8Array(arrayBuffer);\n        } else {\n          // It's a regular URL\n          pdfData = { url: pdfUrl, withCredentials: false };\n        }\n        \n        // Load the PDF\n        const pdf = await pdfjsLib.getDocument(pdfData).promise;\n        \n        if (!isMounted) return;\n        \n        // Store the pdf document\n        pdfDocRef.current = pdf;\n        \n        // Set the total page count\n        setNumPages(pdf.numPages);\n        pdfViewerRef.current.pagesCount = pdf.numPages;\n        setPageNumber(1);\n        setPdfLoaded(true);\n        setIsLoading(false);\n      } catch (error) {\n        if (!isMounted) return;\n        console.error('Error loading PDF:', error);\n        setError(`Failed to load PDF: ${error.message}`);\n        setIsLoading(false);\n      }\n    };\n    \n    loadPdf();\n    \n    // Cleanup\n    return () => {\n      isMounted = false;\n      if (pdfDocRef.current) {\n        try {\n          pdfDocRef.current.destroy();\n          pdfDocRef.current = null;\n        } catch (e) {\n          console.error('Error destroying PDF document:', e);\n        }\n      }\n    };\n  }, [pdfUrl]);\n  \n  // Render the current page when page number changes\n  useEffect(() => {\n    if (!pdfLoaded || !pdfDocRef.current || !canvasRef.current || !pageNumber) {\n      return;\n    }\n    \n    let isMounted = true;\n    \n    const renderPage = async () => {\n      try {\n        // Get the page\n        const page = await pdfDocRef.current.getPage(pageNumber);\n        \n        if (!isMounted || !canvasRef.current) {\n          page.cleanup && page.cleanup();\n          return;\n        }\n        \n        // Get the viewport at scale 1.0\n        const viewport = page.getViewport({ scale: 1.0 });\n        \n        // Get the canvas and context\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d', { alpha: false });\n        \n        // Clear the canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        \n        // Set canvas dimensions for high quality\n        const adjustedScale = 2.0;\n        canvas.width = viewport.width * adjustedScale;\n        canvas.height = viewport.height * adjustedScale;\n        \n        // Store original dimensions for zoom calculations\n        canvas.setAttribute('data-original-width', viewport.width);\n        canvas.setAttribute('data-original-height', viewport.height);\n        \n        // Scale down the canvas for display (apply current zoom)\n        canvas.style.width = (viewport.width * scale) + 'px';\n        canvas.style.height = (viewport.height * scale) + 'px';\n        \n        // Set scale for context\n        context.scale(adjustedScale, adjustedScale);\n        \n        // Render the page\n        await page.render({\n          canvasContext: context,\n          viewport: viewport\n        }).promise;\n        \n        // Clean up page resources\n        page.cleanup && page.cleanup();\n        \n        // Update auto-scroll refs\n        pdfViewerRef.current.currentPageNumber = pageNumber;\n        if (containerRef.current) {\n          pdfViewerRef.current.container = containerRef.current;\n        }\n      } catch (error) {\n        if (!isMounted) return;\n        console.error('Error rendering page:', error);\n        setError(`Error rendering page ${pageNumber}: ${error.message}`);\n      }\n    };\n    \n    renderPage();\n    \n    return () => {\n      isMounted = false;\n    };\n  }, [pageNumber, pdfLoaded, scale]);\n  \n  // Update zoom when scale changes\n  useEffect(() => {\n    if (!canvasRef.current || !pdfLoaded || !pdfDocRef.current) return;\n    \n    const canvas = canvasRef.current;\n    \n    // Get original dimensions (stored in data attributes or from style)\n    const originalWidth = parseFloat(canvas.getAttribute('data-original-width') || \n                                    canvas.style.width || \n                                    canvas.width);\n    const originalHeight = parseFloat(canvas.getAttribute('data-original-height') || \n                                     canvas.style.height || \n                                     canvas.height);\n    \n    // If we don't have original dimensions stored, save them\n    if (!canvas.getAttribute('data-original-width')) {\n      canvas.setAttribute('data-original-width', originalWidth);\n      canvas.setAttribute('data-original-height', originalHeight);\n    }\n    \n    // Apply zoom to canvas display size\n    canvas.style.width = (originalWidth * scale) + 'px';\n    canvas.style.height = (originalHeight * scale) + 'px';\n    \n    // Re-render the current page with updated scale to maintain quality\n    const renderCurrentPage = async () => {\n      try {\n        // Get the page\n        const page = await pdfDocRef.current.getPage(pageNumber);\n        \n        // Get the viewport with current scale\n        const viewport = page.getViewport({ scale: 1.0 });\n        \n        // Get the canvas and context\n        const context = canvas.getContext('2d', { alpha: false });\n        \n        // Clear the canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        \n        // Set canvas dimensions for high quality with current scale\n        const adjustedScale = 2.0;\n        canvas.width = viewport.width * adjustedScale;\n        canvas.height = viewport.height * adjustedScale;\n        \n        // Apply zoom to display size\n        canvas.style.width = (viewport.width * scale) + 'px';\n        canvas.style.height = (viewport.height * scale) + 'px';\n        \n        // Set scale for context\n        context.scale(adjustedScale, adjustedScale);\n        \n        // Render the page\n        await page.render({\n          canvasContext: context,\n          viewport: viewport\n        }).promise;\n        \n        // Clean up page resources\n        page.cleanup && page.cleanup();\n      } catch (error) {\n        console.error('Error re-rendering page for zoom:', error);\n      }\n    };\n    \n    renderCurrentPage();\n  }, [scale, pdfLoaded, pageNumber]);\n  \n  // Handle page navigation\n  const changePage = (offset, resetScroll = true) => {\n    if (!numPages) return;\n    \n    // Create and dispatch an event to notify auto-scroll component to reset timer\n    const resetTimerEvent = new CustomEvent('resetAutoScrollTimer');\n    document.dispatchEvent(resetTimerEvent);\n    \n    // Reset scroll position when changing pages (if resetScroll is true)\n    if (resetScroll && containerRef.current) {\n      containerRef.current.scrollTop = 0;\n    }\n    \n    setPageNumber(prevPageNumber => {\n      const newPageNumber = prevPageNumber + offset;\n      return Math.min(Math.max(1, newPageNumber), numPages);\n    });\n  };\n  \n  // Handle zoom controls\n  const zoomIn = () => setScale(prevScale => Math.min(prevScale + 0.25, 4.0));\n  const zoomOut = () => setScale(prevScale => Math.max(prevScale - 0.25, 0.5));\n  const resetZoom = () => setScale(1.0);\n  \n  // Listen for page change events from auto-scroll and handle key navigation\n  useEffect(() => {\n    const handlePageChange = (event) => {\n      const { newPage } = event.detail;\n      if (newPage && newPage <= numPages) {\n        setPageNumber(newPage);\n      }\n    };\n    \n    // Handle page change without scroll reset\n    const handlePageChangeNoScroll = (event) => {\n      const { newPage } = event.detail;\n      if (newPage && newPage <= numPages) {\n        changePage(newPage - pageNumber, false);\n      }\n    };\n    \n    // Handle keyboard navigation for scrolling within PDF container\n    const handleKeyDown = (e) => {\n      // Find the PDF container element which has the scrollbar\n      const pdfContainer = document.querySelector('.pdf-container');\n      if (!pdfContainer) return;\n      \n      if (e.key === 'x' || e.key === 'X') {\n        // Scroll up within the PDF container\n        pdfContainer.scrollBy({\n          top: -150,\n          behavior: 'smooth'\n        });\n        e.preventDefault(); // Prevent default browser behavior\n      } else if (e.key === 'c' || e.key === 'C') {\n        // Scroll down within the PDF container\n        pdfContainer.scrollBy({\n          top: 150,\n          behavior: 'smooth'\n        });\n        e.preventDefault(); // Prevent default browser behavior\n      } else if (e.key === 'o' || e.key === 'O') {\n        // Scroll to top of the page (like Home key)\n        pdfContainer.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n        e.preventDefault(); // Prevent default browser behavior\n      } else if (e.key === 'p' || e.key === 'P') {\n        // Scroll to bottom of the page (like End key)\n        pdfContainer.scrollTo({\n          top: pdfContainer.scrollHeight,\n          behavior: 'smooth'\n        });\n        \n        // Reset auto-scroll timer\n        const resetTimerEvent = new CustomEvent('resetAutoScrollTimer');\n        document.dispatchEvent(resetTimerEvent);\n        \n        e.preventDefault(); // Prevent default browser behavior\n      }\n    };\n    \n    document.addEventListener('pageChange', handlePageChange);\n    document.addEventListener('pageChangeNoScroll', handlePageChangeNoScroll);\n    document.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      document.removeEventListener('pageChange', handlePageChange);\n      document.removeEventListener('pageChangeNoScroll', handlePageChangeNoScroll);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [numPages]);\n  \n  return (\n    <div className=\"pdf-viewer\">\n      <div className=\"pdf-toolbar\">\n        <div className=\"page-navigation\">\n          <button \n            onClick={() => changePage(-1)} \n            disabled={pageNumber <= 1 || isLoading}\n          >\n            Previous (z)\n          </button>\n          <span>\n            Page {pageNumber} of {numPages || '--'}\n          </span>\n          <button \n            onClick={() => changePage(1)} \n            disabled={pageNumber >= numPages || isLoading}\n            id=\"next-page-button\"\n          >\n            Next (m/,)\n          </button>\n        </div>\n        \n        <div className=\"zoom-controls\">\n          <button onClick={zoomOut} disabled={isLoading}>-</button>\n          <span>{Math.round(scale * 100)}%</span>\n          <button onClick={zoomIn} disabled={isLoading}>+</button>\n          <button onClick={resetZoom} disabled={isLoading}>Reset</button>\n        </div>\n        \n        <PDFAutoScroll pdfViewerRef={pdfViewerRef} />\n      </div>\n      \n      <div className=\"pdf-container\" ref={containerRef}>\n        {error && <div className=\"pdf-error\">{error}</div>}\n        {isLoading && <div className=\"pdf-loading\">Loading PDF document...</div>}\n        {pdfLoaded && !isLoading && !error && (\n          <canvas ref={canvasRef} className=\"pdf-page\"></canvas>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PDFViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}